<?xml version="1.0"?>
<robot name="audibot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Material definitions -->
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <xacro:property name="half_front_track_width" value="0.1688" />
  <xacro:property name="half_rear_track_width" value="0.165" />
  <xacro:property name="half_wheelbase" value="0.265" />

  <xacro:property name="wheel_radius" value="0.072" />
  <xacro:property name="wheel_thickness" value="0.050" />
  <xacro:property name="wheel_mass" value="8.0" />

  <xacro:property name="body_mass" value="324" />
  <xacro:property name="body_width" value="${2*half_rear_track_width}" />
  <xacro:property name="body_depth" value="${2*half_wheelbase + 0.16}" />
  <xacro:property name="body_length" value="0.12" />

  <xacro:arg name="pub_tf" default="true" />
  <xacro:arg name="robot_name" default="" />
  <xacro:arg name="blue" default="false" />

  <gazebo>
    <!-- Simulated vehicle interface -->
    <plugin name="audibot_interface_plugin" filename="libaudibot_interface_plugin.so" >
      <robot_name>$(arg robot_name)</robot_name>
      <pub_tf>$(arg pub_tf)</pub_tf>
      <tf_freq>100.0</tf_freq>
      <ros>
        <namespace>$(arg robot_name)</namespace>
      </ros>
    </plugin>

    <!-- Publish current joint angles -->
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <joint_name>steer_fl_joint</joint_name>
        <joint_name>steer_fr_joint</joint_name>
        <joint_name>wheel_fl_joint</joint_name>
        <joint_name>wheel_fr_joint</joint_name>
        <joint_name>wheel_rl_joint</joint_name>
        <joint_name>wheel_rr_joint</joint_name>
        <update_rate>100</update_rate>
        <ros>
          <namespace>$(arg robot_name)</namespace>
        </ros>
    </plugin>
  </gazebo>


  <!-- Camera Integration -->
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.226 0 0.181" rpy="0 0.18 0"/>
  </joint>

  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
      <material name="black"/>
    </visual>
    <visual>
      <origin xyz="0 0 0.05"/>
      <geometry>
        <!-- <cylinder radius="0.002" length="0.1"/> -->
      </geometry>
      <material name="black"/>
    </visual>
  </link>

  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  </joint>

  <link name="camera_link_optical"/>

  <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
    <sensor name="camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>1280</width>
          <height>960</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <!-- <plugin name="camera_controller" filename="libCameraPlugin.so">       -->
        <frame_name>camera_link_optical</frame_name>
      </plugin>
    </sensor>
  </gazebo>  

  <xacro:macro name="rear_wheel" params="name x y z flip" >
    <link name="wheel_${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="1.57079632679 ${flip * 3.1415926535} 0" />
        <geometry>
          <mesh filename="file://$(find audibot_description)/meshes/wheel.dae" scale="0.2 0.2 0.2" />
        </geometry>
      </visual>

      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia ixx="${wheel_mass/12*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" ixy="0" ixz="0" iyy="${wheel_mass/12*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" iyz="0" izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
      </inertial>

    </link>
    <joint name="wheel_${name}_joint" type="continuous" >
      <parent link="base_link" />
      <child link="wheel_${name}" />
      <origin xyz="${x} ${y} ${z}" rpy="-1.57079632679 0 0" /> 
      <axis xyz="0 0 1.0" /> 
      <limit effort="-0.2" velocity="-0.2" />
    </joint>
  </xacro:macro>

  <xacro:macro name="front_wheel" params="name x y z flip" >
    <link name="wheel_${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="1.57079632679 ${flip * pi} 0" />
        <geometry>
          <mesh filename="file://$(find audibot_description)/meshes/wheel.dae" scale="0.2 0.2 0.2" />
        </geometry>
      </visual>

      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia ixx="${wheel_mass/12*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" ixy="0" ixz="0" iyy="${wheel_mass/12*(3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" iyz="0" izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
      </inertial>
    </link>

    <link name="steer_${name}" >
      <inertial>
        <origin xyz="-0.013054 -0.0295 0.0" rpy="0 0 0"/>
        <mass value="4.0"/>
        <inertia ixx="0.4" ixy="0" ixz="0" iyy="0.4" iyz="0" izz="0.4"/>
      </inertial>
    </link>

    <joint name="steer_${name}_joint" type="revolute" >
      <parent link="base_link" />
      <child link="steer_${name}" />
      <origin xyz="${x} ${y} ${z}" rpy="0 0 0" />
      <axis xyz="0 0 0.2" />
      <limit upper="0.12" lower="-0.12" effort="-0.2" velocity="-0.2" />
    </joint>

    <joint name="wheel_${name}_joint" type="continuous" >
      <parent link="steer_${name}" />
      <child link="wheel_${name}" />
      <origin xyz="0 0 0" rpy="-1.57079632679 0 0" />
      <axis xyz="0 0 0.2" />
      <limit effort="-0.2" velocity="-0.2" />
    </joint>
  </xacro:macro>

  <link name="base_footprint">
  </link>

  <link name="base_link">
    <visual>
      <origin xyz="0.007 0 0.005" rpy="0 0 0" />
      <geometry>
        <xacro:if value="$(arg blue)" >
          <mesh filename="file://$(find audibot_description)/meshes/blue_body.dae" scale="0.2 0.2 0.2" />
        </xacro:if>
        <xacro:unless value="$(arg blue)" >
          <mesh filename="file://$(find audibot_description)/meshes/orange_body.dae" scale="0.2 0.2 0.2" />
        </xacro:unless>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.007 0 0.005" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find audibot_description)/meshes/body_collision.stl" scale="0.2 0.2 0.2" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${body_mass}"/>
      <inertia ixx="${body_mass/12 * (body_width*body_width + body_length*body_length)}" ixy="0" ixz="0" iyy="${body_mass/12 * (body_length*body_length + body_depth*body_depth)}" iyz="0" izz="${body_mass/12 * (body_width*body_width + body_depth*body_depth)}"/>
    </inertial>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="${half_wheelbase} 0 ${wheel_radius}" rpy="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <xacro:rear_wheel name="rl" x="${-half_wheelbase}" y="${half_rear_track_width}" z="0" flip="1" />
  <xacro:rear_wheel name="rr" x="${-half_wheelbase}" y="${-half_rear_track_width}" z="0" flip="0" />
  <xacro:front_wheel name="fl" x="${half_wheelbase}" y="${half_front_track_width}" z="0" flip="1" />
  <xacro:front_wheel name="fr" x="${half_wheelbase}" y="${-half_front_track_width}" z="0" flip="0" />

  <xacro:property name="wheel_friction" value="1.75" />
  

  <gazebo reference="base_link" >
    <mu1>0.05</mu1>
    <mu2>0.05</mu2>
  </gazebo>

  <gazebo reference="wheel_fl" >
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_fr" >
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_rl" >
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_rr" >
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>

  <!-- <xacro:include filename="camera.xacro" /> -->

  </robot>

